name: Deploy to S3 (dev)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Prevent concurrent dev deployments
concurrency:
  group: deploy-dev-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Wait for CI to complete before deploying
  wait-for-ci:
    name: Wait for CI completion
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Wait for CI workflow
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Build project"
          ref: ${{ github.sha }}
          timeoutSeconds: 600
          intervalSeconds: 10

      - name: CI Status Check
        if: steps.wait-for-ci.outputs.conclusion != 'success'
        run: |
          echo "‚ùå CI failed - cancelling deployment"
          exit 1

  deploy:
    name: Deploy to dev S3 (using CI artifact)
    runs-on: ubuntu-latest
    needs: [wait-for-ci]
    if: always() && (needs.wait-for-ci.result == 'success' || github.event_name == 'workflow_dispatch')

    steps:
      - name: Download build artifact from CI
        if: github.event_name == 'push'
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Fallback: build if manual trigger (no CI artifact available)
      - name: Checkout repository (fallback for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4

      - name: Use Node.js 20 (fallback for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (fallback for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: npm ci

      - name: Build (fallback for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: npm run build

      - name: Verify dist folder exists
        run: |
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "‚ùå No dist folder found or it's empty"
            exit 1
          fi
          echo "‚úÖ Build artifacts found:"
          ls -la dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync `dist` to S3
        run: |
          aws s3 sync dist s3://${{ secrets.S3_BUCKET_NAME }} --delete --no-progress
          # Make index.html cache short-lived and other assets long-lived
          aws s3 cp dist/index.html s3://${{ secrets.S3_BUCKET_NAME }}/index.html --cache-control "no-cache, no-store, must-revalidate"

      - name: Dev deployment summary
        run: |
          echo "üöÄ Dev deployment completed!"
          echo "üåê URL: http://susith-portfolio-dev.s3-website-us-east-1.amazonaws.com"
          echo "üì¶ Bucket: ${{ secrets.S3_BUCKET_NAME }}"
          echo "üîó Commit: ${{ github.sha }}"
